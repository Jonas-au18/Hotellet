@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

    <ul class="navbar-nav">
        @if (User.HasClaim("Admin", "Yes"))
        {
            <li class="nav-item">
                <form class="form-inline" asp-area="" asp-controller="Home" asp-action="AdminPage">
                    <button type="submit" class="nav-link btn btn-link text-light">Return to admin</button>
                </form>
            </li>
            <li class="nav-item">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout">
                    <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
                </form>
            </li>
        }
        @if (SignInManager.IsSignedIn(User) && !User.HasClaim("Admin", "Yes"))
        {
            <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout">
                <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
            </form>
        </li>
        }
        @if(!SignInManager.IsSignedIn(User))
            {
        <li class="nav-item">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
            }
        </ul>
